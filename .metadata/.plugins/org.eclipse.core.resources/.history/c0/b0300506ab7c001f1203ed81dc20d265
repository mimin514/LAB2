/*
 * ledma.c
 *
 *  Created on: Sep 20, 2024
 *      Author: User
 */


#include "ledma.h"

const int MAX_LED_MATRIX = 8;
int index_led_matrix = 0;
uint8_t matrix_buffer[8] = {0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08};
int count=0;
// Function to update the LED matrix based on the index
void ledma_init(){
	HAL_GPIO_WritePin(GPIOA,
			ENM0_Pin|ENM1_Pin|ENM2_Pin|ENM3_Pin|ENM4_Pin|ENM5_Pin|ENM6_Pin|ENM7_Pin,
			GPIO_PIN_SET);
	HAL_GPIO_WritePin(GPIOA,
				ROW0_Pin|ROW1_Pin|ROW2_Pin|ROW3_Pin|ROW4_Pin|ROW5_Pin|ROW6_Pin|ROW7_Pin,
				GPIO_PIN_SET);
}

void updateLEDMatrix(uint8_t *pattern) {
    	if(count>=8) count=0;
        // Clear rows and columns
        HAL_GPIO_WritePin(GPIOA, 0xFF, GPIO_PIN_RESET);  // Reset all rows
        HAL_GPIO_WritePin(GPIOB, 0xFF, GPIO_PIN_RESET);  // Reset all columns

        // Set the current row (only one row active at a time)
        HAL_GPIO_WritePin(GPIOA, (1 << count), GPIO_PIN_SET);

        // Set the column data for this row
        HAL_GPIO_WritePin(GPIOB, pattern[count], GPIO_PIN_SET);

        // Small delay to allow the row to display
        HAL_Delay(100);  // 1ms delay to simulate row scanning
        count++;

}
void row(int num) {
    // Reset tất cả các hàng
    HAL_GPIO_WritePin(GPIOA, 0xFF, GPIO_PIN_RESET);  // Reset các hàng

    // Bật hàng tương ứng
    HAL_GPIO_WritePin(GPIOA, (1 << num), GPIO_PIN_SET);
}

// Điều khiển cột của ma trận LED
void col(int num) {
    // Reset tất cả các cột
    HAL_GPIO_WritePin(GPIOB, 0xFF, GPIO_PIN_RESET);  // Reset các cột

    // Bật các cột tương ứng với dữ liệu pattern
    HAL_GPIO_WritePin(GPIOB, num, GPIO_PIN_SET);
}

// Hiển thị pattern bằng cách điều khiển hàng và cột
void DisplayPattern(uint8_t row_data, uint8_t col_data) {
    row(row_data);    // Chọn hàng cần hiển thị
    col(col_data);    // Chọn cột tương ứng với dữ liệu pattern
}
